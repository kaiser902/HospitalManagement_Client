//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalManagement_Client.AdminDataRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DataModelLib")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HospitalManagement_Client.AdminDataRef.Admin))]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/DataModelLib")]
    [System.SerializableAttribute()]
    public partial class Admin : HospitalManagement_Client.AdminDataRef.User {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrivilegesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Privileges {
            get {
                return this.PrivilegesField;
            }
            set {
                if ((this.PrivilegesField.Equals(value) != true)) {
                    this.PrivilegesField = value;
                    this.RaisePropertyChanged("Privileges");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminDataRef.IAdminDataService")]
    public interface IAdminDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/GetAdminList", ReplyAction="http://tempuri.org/IAdminDataService/GetAdminListResponse")]
        System.Data.DataSet GetAdminList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/GetAdminList", ReplyAction="http://tempuri.org/IAdminDataService/GetAdminListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdminListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/GetAdminDisplayed", ReplyAction="http://tempuri.org/IAdminDataService/GetAdminDisplayedResponse")]
        System.Data.DataSet GetAdminDisplayed();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/GetAdminDisplayed", ReplyAction="http://tempuri.org/IAdminDataService/GetAdminDisplayedResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdminDisplayedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Add_Admin", ReplyAction="http://tempuri.org/IAdminDataService/Add_AdminResponse")]
        int Add_Admin(HospitalManagement_Client.AdminDataRef.Admin _adminUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Add_Admin", ReplyAction="http://tempuri.org/IAdminDataService/Add_AdminResponse")]
        System.Threading.Tasks.Task<int> Add_AdminAsync(HospitalManagement_Client.AdminDataRef.Admin _adminUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Update_Admin", ReplyAction="http://tempuri.org/IAdminDataService/Update_AdminResponse")]
        int Update_Admin(HospitalManagement_Client.AdminDataRef.Admin _adminUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Update_Admin", ReplyAction="http://tempuri.org/IAdminDataService/Update_AdminResponse")]
        System.Threading.Tasks.Task<int> Update_AdminAsync(HospitalManagement_Client.AdminDataRef.Admin _adminUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Delete_Admin", ReplyAction="http://tempuri.org/IAdminDataService/Delete_AdminResponse")]
        void Delete_Admin(string adminId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Delete_Admin", ReplyAction="http://tempuri.org/IAdminDataService/Delete_AdminResponse")]
        System.Threading.Tasks.Task Delete_AdminAsync(string adminId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Get_Priviledge", ReplyAction="http://tempuri.org/IAdminDataService/Get_PriviledgeResponse")]
        int Get_Priviledge(string adminId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Get_Priviledge", ReplyAction="http://tempuri.org/IAdminDataService/Get_PriviledgeResponse")]
        System.Threading.Tasks.Task<int> Get_PriviledgeAsync(string adminId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Get_Id", ReplyAction="http://tempuri.org/IAdminDataService/Get_IdResponse")]
        string Get_Id(HospitalManagement_Client.AdminDataRef.Admin user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDataService/Get_Id", ReplyAction="http://tempuri.org/IAdminDataService/Get_IdResponse")]
        System.Threading.Tasks.Task<string> Get_IdAsync(HospitalManagement_Client.AdminDataRef.Admin user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminDataServiceChannel : HospitalManagement_Client.AdminDataRef.IAdminDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminDataServiceClient : System.ServiceModel.ClientBase<HospitalManagement_Client.AdminDataRef.IAdminDataService>, HospitalManagement_Client.AdminDataRef.IAdminDataService {
        
        public AdminDataServiceClient() {
        }
        
        public AdminDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetAdminList() {
            return base.Channel.GetAdminList();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdminListAsync() {
            return base.Channel.GetAdminListAsync();
        }
        
        public System.Data.DataSet GetAdminDisplayed() {
            return base.Channel.GetAdminDisplayed();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdminDisplayedAsync() {
            return base.Channel.GetAdminDisplayedAsync();
        }
        
        public int Add_Admin(HospitalManagement_Client.AdminDataRef.Admin _adminUser) {
            return base.Channel.Add_Admin(_adminUser);
        }
        
        public System.Threading.Tasks.Task<int> Add_AdminAsync(HospitalManagement_Client.AdminDataRef.Admin _adminUser) {
            return base.Channel.Add_AdminAsync(_adminUser);
        }
        
        public int Update_Admin(HospitalManagement_Client.AdminDataRef.Admin _adminUser) {
            return base.Channel.Update_Admin(_adminUser);
        }
        
        public System.Threading.Tasks.Task<int> Update_AdminAsync(HospitalManagement_Client.AdminDataRef.Admin _adminUser) {
            return base.Channel.Update_AdminAsync(_adminUser);
        }
        
        public void Delete_Admin(string adminId) {
            base.Channel.Delete_Admin(adminId);
        }
        
        public System.Threading.Tasks.Task Delete_AdminAsync(string adminId) {
            return base.Channel.Delete_AdminAsync(adminId);
        }
        
        public int Get_Priviledge(string adminId) {
            return base.Channel.Get_Priviledge(adminId);
        }
        
        public System.Threading.Tasks.Task<int> Get_PriviledgeAsync(string adminId) {
            return base.Channel.Get_PriviledgeAsync(adminId);
        }
        
        public string Get_Id(HospitalManagement_Client.AdminDataRef.Admin user) {
            return base.Channel.Get_Id(user);
        }
        
        public System.Threading.Tasks.Task<string> Get_IdAsync(HospitalManagement_Client.AdminDataRef.Admin user) {
            return base.Channel.Get_IdAsync(user);
        }
    }
}
